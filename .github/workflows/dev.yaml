  name: Deploy to GCP VM

  on:
    push:
      branches:
        - main

  env:
    DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
    DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    GCP_VM_IP: ${{ secrets.GCP_VM_IP }}
    GCP_SSH_USERNAME: ${{ secrets.GCP_SSH_USERNAME }}
    SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
    GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}

  jobs:
    build-and-push:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v2

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1

        - name: Login to Docker Hub
          uses: docker/login-action@v2
          with:
            username: ${{ env.DOCKER_HUB_USERNAME }}
            password: ${{ env.DOCKER_HUB_ACCESS_TOKEN }}

        - name: Build and push Docker image
          id: docker_build
          uses: docker/build-push-action@v2
          with:
            context: .
            file: Dockerfile
            push: true
            tags: ${{ env.DOCKER_HUB_USERNAME }}/video-chat-bot:latest

        - name: Remove previous Docker images from Docker Hub (optional)
          run: |
            IMAGE_NAME="${{ env.DOCKER_HUB_USERNAME }}/video-chat-bot"
            IMAGE_TAGS=$(curl -s "https://hub.docker.com/v2/repositories/${{ env.DOCKER_HUB_USERNAME }}/video-chat-bot/tags/" | jq -r '.results[].name')
            for tag in $IMAGE_TAGS; do
              if [[ "$tag" != "latest" ]]; then
                echo "Removing image: ${IMAGE_NAME}:${tag}"
                curl -s -X DELETE -u "${{ env.DOCKER_HUB_USERNAME }}:${{ env.DOCKER_HUB_ACCESS_TOKEN }}" "https://hub.docker.com/v2/repositories/${{ env.DOCKER_HUB_USERNAME }}/video-chat-bot/tags/${tag}/"
              fi
            done

    deploy:
      runs-on: ubuntu-latest
      needs: build-and-push  # Ensure this job runs after build-and-push
      steps:
        - name: Checkout code
          uses: actions/checkout@v2

        - name: Set up SSH key
          run: |
            echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key.pem
            chmod 600 private_key.pem

        - name: SSH into GCP VM and deploy app
          run: |
            ssh -o StrictHostKeyChecking=no -i private_key.pem ${{ env.GCP_SSH_USERNAME }}@${{ env.GCP_VM_IP }} << 'EOF'
              sudo systemctl start docker
              sudo docker stop video-chat-bot || true
              sudo docker rm video-chat-bot || true
              sudo docker rmi ${{ env.DOCKER_HUB_USERNAME }}/video-chat-bot:latest || true
              sudo docker pull ${{ env.DOCKER_HUB_USERNAME }}/video-chat-bot:latest
              sudo docker run -d --name video-chat-bot -p 8502:8502 \
                -e GOOGLE_API_KEY="${{ secrets.GOOGLE_API_KEY }}" \
                -e NODE_ENV=production \
                ${{ env.DOCKER_HUB_USERNAME }}/video-chat-bot:latest
            EOF

        - name: Clean up SSH Key
          run: rm -f private_key.pem